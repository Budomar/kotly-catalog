# generate_icons.py - –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫ PWA
from PIL import Image, ImageDraw, ImageFont
import os

def create_icons():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è PWA"""
    
    # –¶–≤–µ—Ç–∞ –∏–∑ –≤–∞—à–µ–π —Ç–µ–º—ã
    colors = {
        'primary': '#2563eb',      # –û—Å–Ω–æ–≤–Ω–æ–π —Å–∏–Ω–∏–π
        'primary_dark': '#1d4ed8', # –¢–µ–º–Ω—ã–π —Å–∏–Ω–∏–π
        'white': '#ffffff',        # –ë–µ–ª—ã–π
        'accent': '#f59e0b'        # –ê–∫—Ü–µ–Ω—Ç–Ω—ã–π –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    }
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É images –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    os.makedirs('images', exist_ok=True)
    
    # –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫
    sizes = [
        ('icon-192.png', 192),
        ('icon-512.png', 512),
        ('icon-144.png', 144),
        ('badge.png', 72)
    ]
    
    print("üîÑ –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è PWA...")
    
    for filename, size in sizes:
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = Image.new('RGB', (size, size), colors['primary'])
        draw = ImageDraw.Draw(img)
        
        # –†–∏—Å—É–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
        if size >= 144:
            # –î–ª—è –±–æ–ª—å—à–∏—Ö –∏–∫–æ–Ω–æ–∫ - –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–ª–∞
            draw_boiler_icon(draw, size, colors)
        else:
            # –î–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö - –ø—Ä–æ—Å—Ç–æ–π —Å–∏–º–≤–æ–ª
            draw_simple_icon(draw, size, colors)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        img.save(f'images/{filename}')
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞: {filename} ({size}x{size}px)")
    
    print("üéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print("üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É: images/")

def draw_boiler_icon(draw, size, colors):
    """–†–∏—Å—É–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–∫–æ–Ω–∫—É –∫–æ—Ç–ª–∞"""
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ—Ä–ø—É—Å –∫–æ—Ç–ª–∞
    body_width = size * 0.6
    body_height = size * 0.4
    body_x = (size - body_width) / 2
    body_y = size * 0.3
    
    # –†–∏—Å—É–µ–º –∫–æ—Ä–ø—É—Å
    draw.rectangle(
        [body_x, body_y, body_x + body_width, body_y + body_height],
        fill=colors['white'],
        outline=colors['primary_dark'],
        width=2
    )
    
    # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å –∫–æ—Ç–ª–∞
    top_width = body_width * 0.7
    top_x = body_x + (body_width - top_width) / 2
    top_y = body_y - size * 0.1
    
    draw.rectangle(
        [top_x, top_y, top_x + top_width, body_y],
        fill=colors['white'],
        outline=colors['primary_dark'],
        width=2
    )
    
    # –¢—Ä—É–±–∞
    pipe_width = size * 0.08
    pipe_x = top_x + top_width - pipe_width - size * 0.05
    pipe_y = top_y - size * 0.15
    
    draw.rectangle(
        [pipe_x, pipe_y, pipe_x + pipe_width, top_y],
        fill=colors['white'],
        outline=colors['primary_dark'],
        width=2
    )
    
    # –î–≤–µ—Ä—Ü–∞
    door_width = body_width * 0.4
    door_height = body_height * 0.6
    door_x = body_x + (body_width - door_width) / 2
    door_y = body_y + (body_height - door_height) / 2
    
    draw.rectangle(
        [door_x, door_y, door_x + door_width, door_y + door_height],
        fill=colors['primary_dark'],
        outline=colors['white'],
        width=1
    )
    
    # –†—É—á–∫–∞ –¥–≤–µ—Ä–∏
    handle_size = size * 0.04
    handle_x = door_x + door_width - handle_size * 2
    handle_y = door_y + door_height / 2 - handle_size / 2
    
    draw.ellipse(
        [handle_x, handle_y, handle_x + handle_size, handle_y + handle_size],
        fill=colors['accent']
    )
    
    # –î–ª—è –±–æ–ª—å—à–æ–π –∏–∫–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    if size >= 400:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à—Ä–∏—Ñ—Ç
            font_size = max(20, size // 20)
            font = ImageFont.truetype("arial.ttf", font_size)
            
            # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç "METEOR"
            text = "METEOR"
            text_width = draw.textlength(text, font=font)
            text_x = (size - text_width) / 2
            text_y = body_y + body_height + size * 0.05
            
            draw.text(
                (text_x, text_y),
                text,
                fill=colors['white'],
                font=font
            )
        except:
            # –ï—Å–ª–∏ —à—Ä–∏—Ñ—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—Å—Ç
            pass

def draw_simple_icon(draw, size, colors):
    """–†–∏—Å—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤"""
    # –ü—Ä–æ—Å—Ç–æ–π —Å–∏–ª—É—ç—Ç –∫–æ—Ç–ª–∞
    body_width = size * 0.6
    body_height = size * 0.4
    body_x = (size - body_width) / 2
    body_y = size * 0.3
    
    # –ö–æ—Ä–ø—É—Å
    draw.rectangle(
        [body_x, body_y, body_x + body_width, body_y + body_height],
        fill=colors['white']
    )
    
    # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å
    top_width = body_width * 0.7
    top_x = body_x + (body_width - top_width) / 2
    top_y = body_y - size * 0.08
    
    draw.rectangle(
        [top_x, top_y, top_x + top_width, body_y],
        fill=colors['white']
    )
    
    # –¢—Ä—É–±–∞
    pipe_width = size * 0.1
    pipe_x = top_x + top_width - pipe_width
    pipe_y = top_y - size * 0.12
    
    draw.rectangle(
        [pipe_x, pipe_y, pipe_x + pipe_width, top_y],
        fill=colors['white']
    )

def create_screenshots():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""
    print("\nüîÑ –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤...")
    
    # –°–∫—Ä–∏–Ω—à–æ—Ç—ã (–ø—Ä–æ—Å—Ç–æ —Ü–≤–µ—Ç–Ω—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏)
    screenshots = [
        ('screenshot-1.png', (1280, 720), '#2563eb'),
        ('screenshot-2.png', (750, 1334), '#1d4ed8')
    ]
    
    for filename, dimensions, color in screenshots:
        img = Image.new('RGB', dimensions, color)
        draw = ImageDraw.Draw(img)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        try:
            font_size = min(dimensions) // 15
            font = ImageFont.truetype("arial.ttf", font_size)
            
            text = f"–°–∫—Ä–∏–Ω—à–æ—Ç {filename}"
            text_width = draw.textlength(text, font=font)
            text_x = (dimensions[0] - text_width) / 2
            text_y = (dimensions[1] - font_size) / 2
            
            draw.text((text_x, text_y), text, fill='white', font=font)
        except:
            # –ü—Ä–æ—Å—Ç–æ –±–µ–ª—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –µ—Å–ª–∏ –Ω–µ—Ç —à—Ä–∏—Ñ—Ç–∞
            draw.rectangle(
                [dimensions[0]*0.2, dimensions[1]*0.4, 
                 dimensions[0]*0.8, dimensions[1]*0.6],
                fill='white'
            )
        
        img.save(f'images/{filename}')
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞: {filename} ({dimensions[0]}x{dimensions[1]}px)")
    
    print("üìù –ó–∞–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥–ª—É—à–∫–∏. –ó–∞–º–µ–Ω–∏—Ç–µ –∏—Ö —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–∞–π—Ç–∞.")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Pillow
    try:
        create_icons()
        create_screenshots()
        
        print("\n" + "="*50)
        print("üéØ –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∞–π—Ç –∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã")
        print("2. –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ images/")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ PWA –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F12 -> Application)")
        print("="*50)
        
    except ImportError:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Pillow")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ –∫–æ–º–∞–Ω–¥–æ–π: pip install Pillow")
        print("üíª –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python -m pip install Pillow")